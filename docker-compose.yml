services:
  rabbitmq:
    image: masstransit/rabbitmq:latest
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - taskit
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 15s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:16-alpine
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: taskit
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - taskit

  api:
    build:
      context: .
      dockerfile: src/Taskit.Web/Dockerfile
    ports:
      - '5152:5152'
    environment:
      ASPNETCORE_URLS: http://+:5152
      ConnectionStrings__DefaultConnection: 'Host=postgres;Port=5432;Database=taskit;Username=postgres;Password=postgres'
      RabbitMQ__Host: rabbitmq
      RabbitMQ__Username: guest
      RabbitMQ__Password: guest
    volumes:
      - ./src/Taskit.Web/taskit.db:/app/taskit.db
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
      worker:
        condition: service_started
      aiworker:
        condition: service_started
    networks:
      - taskit

  worker:
    build:
      context: .
      dockerfile: src/Taskit.Notification.Worker/Dockerfile
    environment:
      ConnectionStrings__DefaultConnection: 'Host=postgres;Port=5432;Database=taskit;Username=postgres;Password=postgres'
      RabbitMQ__Host: rabbitmq
      RabbitMQ__Username: guest
      RabbitMQ__Password: guest
    volumes:
      - ./src/Taskit.Web/taskit.db:/app/taskit.db
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - taskit

  aiworker:
    build:
      context: .
      dockerfile: src/Taskit.AI.Orchestrator/Dockerfile
    environment:
      ConnectionStrings__DefaultConnection: 'Host=postgres;Port=5432;Database=taskit;Username=postgres;Password=postgres'
      RabbitMQ__Host: rabbitmq
      RabbitMQ__Username: guest
      RabbitMQ__Password: guest
      OpenAI__ApiKey: "${OpenAI__ApiKey:-}"
    volumes:
      - ./src/Taskit.Web/taskit.db:/app/taskit.db
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - taskit

networks:
  taskit:
    driver: bridge

volumes:
  postgres-data:
    driver: local